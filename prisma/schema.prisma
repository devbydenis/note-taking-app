// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// NOTE: Prisma recommend us to custom output 

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  username    String  
  email       String      @unique
  password    String  
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  notes       Note[]
  comments    Comment[]
  shares      NoteShare[] @relation("UserShares")
}

model Note {
  id          Int         @id @default(autoincrement())
  userId      Int
  title       String
  content     String
  isPublic    Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user        User        @relation(fields: [userId], references: [id])
  comments    Comment[]
  shares      NoteShare[]
}

model NoteShare {
  id          Int         @id @default(autoincrement())
  noteId      Int
  userId      Int
  createdAt   DateTime    @default(now())

  note        Note        @relation(fields: [noteId], references: [id])
  user        User        @relation("UserShares", fields: [userId], references: [id])
}

model Comment {
  id          Int         @id @default(autoincrement())
  noteId      Int
  userId      Int
  content     String
  createdAt   DateTime    @default(now())

  note        Note        @relation(fields: [noteId], references: [id])
  user        User        @relation(fields: [userId], references: [id])
}